{"version":3,"file":"2.452f2bc57401be89a859.hot-update.js","sources":["webpack:///pages/_document.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport flush from 'styled-jsx/server';\n\nclass MyDocument extends Document {\n  render() {\n    const { pageContext } = this.props;\n\n    return (\n      <html lang=\"en\" dir=\"ltr\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n          />\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={pageContext.theme.palette.primary.main} />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  let pageContext;\n  const page = ctx.renderPage(Component => {\n    const WrappedComponent = props => {\n      pageContext = props.pageContext;\n      return <Component {...props} />;\n    };\n\n    WrappedComponent.propTypes = {\n      pageContext: PropTypes.object.isRequired,\n    };\n\n    return WrappedComponent;\n  });\n\n  return {\n    ...page,\n    pageContext,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: (\n      <React.Fragment>\n        <style\n          id=\"jss-server-side\"\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: pageContext.sheetsRegistry.toString() }}\n        />\n        {flush() || null}\n      </React.Fragment>\n    ),\n  };\n};\n\nexport default MyDocument;\n\n\n\n// WEBPACK FOOTER //\n// pages/_document.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtBA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AANA;AAeA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}